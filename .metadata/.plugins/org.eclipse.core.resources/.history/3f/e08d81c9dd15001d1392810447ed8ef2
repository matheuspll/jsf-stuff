package br.com.medicamento.controller;

import java.io.Serializable;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import javax.inject.Inject;
import javax.inject.Named;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;

import br.com.medicamento.model.Aluno;

@ManagedBean
@Named
@ViewScoped
public class AlunoController implements Serializable {

	private static final long serialVersionUID = 1L;

	@Inject 
	private Aluno aluno; // ao inserir no formulário é injetado um medicamento
	
	private List<Aluno> alunos;

	EntityManagerFactory emf;
	EntityManager em;
	
	@PostConstruct // é um método que é invocado logo após a injeção de dependencia 
	public void carregar() {
		alunos = findAll();
	}

	public AlunoController() {
		emf = Persistence.createEntityManagerFactory("alunoTest");
		em = emf.createEntityManager();
	}
	
	public void adicionar() {
		
		save(aluno); 
		aluno = new Aluno(); // limpa a variavel aluno / formulário
		carregar(); // carrega a lista de medicamentos ao salvar			
	}

	public void save(Aluno aluno) {
		
		try {			
			em.getTransaction().begin();
			
			if (aluno.getId() == null) {
				em.persist(aluno);
			} else {
				em.merge(aluno);
			}						
			
			em.getTransaction().commit();
		}
		catch (Exception e) {
			em.getTransaction().rollback();
		}		
	}

	public Aluno findById(Class<Aluno> entityClass, Integer id) {
		return em.find(entityClass, id);
	}
	
	@SuppressWarnings("unchecked")
	public List<Aluno> findAll() {
		Query query = em.createQuery("SELECT a FROM Aluno a order by a.name"); // orientado a Aluno = classe.
		return query.getResultList(); // executa a Query(Select) e retorna todas as consultas			
	}
	
	public void begin() {		
		em.getTransaction().begin();
	}

	public void close() {
		em.getTransaction().commit();
		emf.close();
	}
	
	public Aluno getAluno() {
		return aluno;
	}
	
	public void setAluno(Aluno aluno) {
		this.aluno = aluno;
	}
	
	public List<Aluno> getAlunos() {
		return alunos;
	}	
	
}
